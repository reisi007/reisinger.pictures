---
import type { InferGetStaticPropsType, PaginateFunction } from "astro";
import { getCollection } from "astro:content";
import Einblicke from "../../../layouts/Einblicke.astro";
import BaseHead from "../../../layouts/BaseHead.astro";
import Breadcrumbs from "../../../layouts/Breadcrumbs.astro";
import MinimalPage from "../../../layouts/pages/MinimalPage.astro";

export async function getStaticPaths({ paginate }: { paginate: PaginateFunction }) {
  const overviewPages = (await getCollection("einblickeOverviews"));

  const posts = (await getCollection("einblicke")).sort(
    (a, b) => {
      const aData = a.data;
      const bData = b.data;

      return Math.max(bData.pubDate.valueOf(), bData.updated?.valueOf() ?? Number.MIN_VALUE) - Math.max(aData.pubDate.valueOf(), aData.updated?.valueOf() ?? Number.MIN_VALUE);
    }
  );

  return overviewPages.flatMap((e) => {
    const relevantPosts = posts.filter(p => e.slug === "/" || p.slug.startsWith(e.slug));
    return paginate(relevantPosts, {
      pageSize: 12,
      params: { overview: e.slug },
      props: { title: e.data.title, render: e.render, slug: e.slug }
    });
  });
}
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page, title, render, slug } = Astro.props;
const { Content } = await render();
---
<MinimalPage>
  <BaseHead title={title} noIndex={!(slug === "/" && page.url.prev === undefined)} slot="head" />
  <Breadcrumbs />
  <h1>{title}</h1>
  <Content />
  <Einblicke page={page} />
</MinimalPage>

---