---
import { getCollection } from "astro:content";
import MinimalPage from "../../layouts/pages/MinimalPage.astro";
import type { InferGetStaticPropsType } from "astro";
import BaseHead from "../../layouts/BaseHead.astro";
import { GalleryLayout } from "../../layouts/GalleryLayout";
import SocialImage from "../../layouts/SocialImage.astro";
import ResponsiveImage from "../../layouts/ResponsiveImage.astro";
import { getImageMetadataSlugFromAbsoluteName } from "../../layouts/image.utils";
import GalleryMenu from "../../layouts/GalleryMenu.astro";
import categories from "../../content/categories.json";

export async function getStaticPaths() {
  const categories = await getCollection("categories");
  return await Promise.all(categories.map(async (category) => {
    const images = (await getCollection("imageMetadata", e => e.data.categories?.includes(category.id) ?? false))
      .sort((a, b) => (b.data.metadata?.captureDate?.getTime() ?? -1) - (a.data.metadata?.captureDate?.getTime() ?? -1))
      .map(e => {
        const { filePath = "xxxxxxxxx" } = e;
        return filePath.substring(4, filePath.length - 5);
      });
    return ({ params: { category: category.id }, props: { data: category.data, images } });
  }));
}
type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { data, images } = Astro.props;
const { category: currentPath } = Astro.params;
const { name } = data;

const title = name !== "Alle Bilder" ? `Alle Bilder - ${name}` : name;
---
<MinimalPage>
  <BaseHead title={title} slot="head">
    <SocialImage name={images[0]} />
  </BaseHead>

  <GalleryMenu categories={categories} currentPath={currentPath} />

  <h1>{title}</h1>

  <section data-clickable data-gallery={GalleryLayout.Presentation}>
    {images.map((image) => {
      return (
        <a href={`/gallery/${getImageMetadataSlugFromAbsoluteName(image)}`}>
          <ResponsiveImage name={image} />
        </a>
      );
    })}
  </section>


</MinimalPage>