---
import type { InferGetStaticPropsType } from "astro";
import { getCollection } from "astro:content";

import BaseHead from "../../layouts/BaseHead.astro";
import MinimalPage from "../../layouts/pages/MinimalPage.astro";
import { groupBy, slugToName } from "../../utils";
import ResponsiveImage from "../../layouts/ResponsiveImage.astro";
import { tryGetImageNameByName } from "../../images/Images";
import Breadcrumbs from "../../layouts/Breadcrumbs.astro";
import SocialImage from "../../layouts/SocialImage.astro";

export async function getStaticPaths() {
  const testimonials = await getCollection("testimonials");

  const pageData = groupBy(testimonials, e => e.data.type);

  return Object.keys(pageData).flatMap((type) => {
    const sortedReviews = pageData[type].sort((a, b) => b.data.date.getTime() - a.data.date.getTime());
    return { params: { area: type }, props: { reviews: sortedReviews, type } };
  });
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { type, reviews } = Astro.props;
const heroImage = reviews.map(e => `${e.slug}/large`)
  .map(e => tryGetImageNameByName(e, []))
  .find(e => e !== undefined);

const name = slugToName(type);
---
<MinimalPage>
  <BaseHead title={`${name} Bewertungen`} slot="head">
    <SocialImage name={heroImage} />
  </BaseHead>
  <Breadcrumbs />
  <h1 class="mb-8">{name} Bewertungen</h1>
  <div class="mx-2 grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4">
    {reviews.map(async e => {
      const baseName = `images/testimonials/${e.slug}`;
      const smallName = `${baseName}/small`;
      const small = tryGetImageNameByName(smallName, []);
      return;
        <>
          {
            small &&
            <div class="avatar">
              <a href={`/testimonials/${e.slug}`} aria-label={e.data.name}>
                <ResponsiveImage class="rounded-full !size-32" sizes="128px" widths={[128]} name={smallName} />
              </a>
            </div>
          }
          {
            !small &&
            <div class="avatar avatar-placeholder">
              <div class="size-32 bg-neutral rounded-full">
                <a class="text-neutral-content no-underline" href={`/testimonials/${e.slug}`}
                >
                  {e.data.name}
                </a>
              </div>
            </div>
          }
        </>;
    })}
  </div>
</MinimalPage>
