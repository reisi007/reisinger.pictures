---
import type { Organization, Person, SchemaCreationFunction } from "./SchemaOrg";
import { getImage } from "astro:assets";
import { getImage as getImageByName } from "../images/Images";
import { absoluteLink } from "./ImageUtils";

const url = Astro.url;


function formatDate(date?: Date): string | undefined {
  if (date === undefined) return undefined;
  const year = date.getFullYear();

  // getMonth() is zero-based (0-11), so we add 1.
  const month = date.getMonth() + 1;

  const day = date.getDate();

  // Pad month and day with a leading zero if they are single-digit.
  const paddedMonth = String(month).padStart(2, "0");
  const paddedDay = String(day).padStart(2, "0");

  return `${year}-${paddedMonth}-${paddedDay}`;
}

export interface Props { createData: SchemaCreationFunction }

const { createData } = Astro.props;

const logoInfo = await getImage({
  src: getImageByName("logo"),
  format: "webp"
});

const me: Person = {
  "@type": "Person",
  name: "Florian Reisinger"
};

const organisation: Organization = {
  "@type": "Organization",
  name: "Fotograf Florian Reisinger",
  url: Astro.site?.toString(),
  logo: absoluteLink(Astro.url, logoInfo.src),
  address: {
    "@type": "PostalAddress",
    addressCountry: "AT",
    addressLocality: "Linz",
    postalCode: "4020",
    streetAddress: "Robert-Stolz-StraÃŸe 8"
  }
};

const data = createData(organisation, me, e => formatDate(e), url.toString());
const json = JSON.stringify(data);
// console.log(JSON.stringify(data, undefined, 2));
---

<script type="application/ld+json" is:inline set:html={json} />
